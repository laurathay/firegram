{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFireStore = collection => {\n  const [docs, setDocs] = useState([]);\n  useEffect(() => {\n    const unsub = projectFirestore.collection(collection).orderBy('createdAt', 'desc') //everytime an image is added it is notified by the snapshot\n    .onSnapshot(snap => {\n      //create an array of document that will return \n      let documents = []; // push the datas of the documents into the document \n\n      snap.forEach(doc => {\n        documents.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setDocs(documents);\n    });\n    return () => unsub();\n  }, [collection]);\n  return {\n    docs\n  };\n};\n\nexport default useFireStore;","map":{"version":3,"sources":["/Users/laurathay_1/Desktop/Projets/firegram/src/hooks/useFirestore.js"],"names":["useState","useEffect","projectFirestore","useFireStore","collection","docs","setDocs","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AACjC,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,KAAK,GAAGL,gBAAgB,CAACE,UAAjB,CAA4BA,UAA5B,EACTI,OADS,CACD,WADC,EACY,MADZ,EAEV;AAFU,KAGTC,UAHS,CAGEC,IAAI,IAAI;AAChB;AACA,UAAIC,SAAS,GAAG,EAAhB,CAFgB,CAGhB;;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAaC,GAAG,IAAI;AAChBF,QAAAA,SAAS,CAACG,IAAV,CAAe,EAAC,GAAGD,GAAG,CAACE,IAAJ,EAAJ;AAAgBC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAAxB,SAAf;AACH,OAFD;AAGAV,MAAAA,OAAO,CAACK,SAAD,CAAP;AACH,KAXS,CAAd;AAaA,WAAO,MAAMJ,KAAK,EAAlB;AAEH,GAhBQ,EAgBN,CAACH,UAAD,CAhBM,CAAT;AAkBA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACH,CAtBD;;AAwBA,eAAeF,YAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFireStore = (collection) => {\n    const [ docs, setDocs ] = useState([]);\n\n    useEffect(() => {\n        const unsub = projectFirestore.collection(collection)\n            .orderBy('createdAt', 'desc')\n            //everytime an image is added it is notified by the snapshot\n            .onSnapshot(snap => {\n                //create an array of document that will return \n                let documents = [];\n                // push the datas of the documents into the document \n                snap.forEach(doc => {\n                    documents.push({...doc.data(), id: doc.id})\n                });\n                setDocs(documents);\n            });\n\n        return () => unsub();\n\n    }, [collection])\n\n    return { docs };\n}\n\nexport default useFireStore;"]},"metadata":{},"sourceType":"module"}