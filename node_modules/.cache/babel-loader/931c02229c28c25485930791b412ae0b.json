{"ast":null,"code":"var _jsxFileName = \"/Users/laurathay_1/Desktop/Projets/firegram/src/comps/UploadForm.js\";\nimport React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n  //download the file, null cause need to click\n  const [file, setFile] = useState(null); //for errors\n\n  const [error, setError] = useState(null); //array of allowed type\n\n  const types = ['image/png', 'image/jpeg']; //we get the file\n\n  const changeHandler = e => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('set the right type of file');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    action: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \" + \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }\n  }, error), file && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }, file.name), file && /*#__PURE__*/React.createElement(ProgressBar, {\n    file: file,\n    setFile: setFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  })));\n};\n\nexport default UploadForm;","map":{"version":3,"sources":["/Users/laurathay_1/Desktop/Projets/firegram/src/comps/UploadForm.js"],"names":["React","useState","ProgressBar","UploadForm","file","setFile","error","setError","types","changeHandler","e","selected","target","files","includes","type","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAErB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC,CAHqB,CAIrB;;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC,CALqB,CAOrB;;AACA,QAAMO,KAAK,GAAG,CAAE,WAAF,EAAgB,YAAhB,CAAd,CARqB,CAUrB;;AACA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzB,QAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf;;AAEA,QAAIF,QAAQ,IAAIH,KAAK,CAACM,QAAN,CAAeH,QAAQ,CAACI,IAAxB,CAAhB,EAA+C;AAC3CV,MAAAA,OAAO,CAACM,QAAD,CAAP;AACAJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACH;AACJ,GAVD;;AAYJ,sBACI;AAAM,IAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGE,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMH,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBA,KAAzB,CADf,EAEMF,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAI,CAACY,IAAZ,CAFd,EAGMZ,IAAI,iBAAI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,IAAnB;AAAyB,IAAA,OAAO,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHd,CANJ,CADJ;AAcC,CArCD;;AAuCA,eAAeF,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n\n    //download the file, null cause need to click\n    const [file, setFile] = useState(null);\n    //for errors\n    const [error, setError] = useState(null);\n\n    //array of allowed type\n    const types = [ 'image/png' , 'image/jpeg' ];\n\n    //we get the file\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n\n        if (selected && types.includes(selected.type)) {\n            setFile(selected);\n            setError('');\n        } else {\n            setFile(null);\n            setError('set the right type of file');\n        }\n    }\n\nreturn (\n    <form action>\n        <label>\n            <input type=\"file\" onChange={ changeHandler } />\n            <span> + </span>\n        </label>\n\n        <div className=\"output\">\n            { error && <div className='error'>{ error }</div> }\n            { file && <div>{ file.name }</div>}\n            { file && <ProgressBar file={file} setFile={setFile} /> }\n        </div>\n    </form>\n    )\n}\n\nexport default UploadForm;"]},"metadata":{},"sourceType":"module"}