{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    //references\n    const storageRef = projectStorage.ref(file.name); //where we put our pictures in the db after its downloaded in firebase with method collection\n\n    const collectionRef = projectFirestore.collection('images');\n    storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      const createdAt = timestamp();\n      await collectionRef.add({\n        url,\n        createdAt\n      });\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["/Users/laurathay_1/Desktop/Projets/firegram/src/hooks/useStorage.js"],"names":["useEffect","useState","projectStorage","projectFirestore","timestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,SAA3C,QAA4D,oBAA5D;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAEzB,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAAEQ,KAAF,EAASC,QAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAEU,GAAF,EAAOC,MAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMa,UAAU,GAAGX,cAAc,CAACY,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB,CAFY,CAGZ;;AACA,UAAMC,aAAa,GAAGb,gBAAgB,CAACc,UAAjB,CAA4B,QAA5B,CAAtB;AAEAJ,IAAAA,UAAU,CAACK,GAAX,CAAeZ,IAAf,EAAqBa,EAArB,CAAwB,eAAxB,EAA0CC,IAAD,IAAU;AAC/C,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAf,MAAAA,WAAW,CAACa,UAAD,CAAX;AACH,KAHD,EAGIG,GAAD,IAAS;AACRd,MAAAA,QAAQ,CAACc,GAAD,CAAR;AACH,KALD,EAKG,YAAY;AACX,YAAMb,GAAG,GAAG,MAAME,UAAU,CAACY,cAAX,EAAlB;AACA,YAAMC,SAAS,GAAGtB,SAAS,EAA3B;AACA,YAAMY,aAAa,CAACW,GAAd,CAAkB;AAAEhB,QAAAA,GAAF;AAAOe,QAAAA;AAAP,OAAlB,CAAN;AACAd,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH,KAVD;AAWH,GAjBQ,EAiBN,CAACL,IAAD,CAjBM,CAAT;AAmBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACH,CA3BD;;AA6BA,eAAeJ,UAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n\n    const [ progress, setProgress ] = useState(0);\n    const [ error, setError ] = useState(null);\n    const [ url, setUrl ] = useState(null);\n\n\n    useEffect(() => {\n        //references\n        const storageRef = projectStorage.ref(file.name);\n        //where we put our pictures in the db after its downloaded in firebase with method collection\n        const collectionRef = projectFirestore.collection('images');\n\n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err) =>Â {\n            setError(err);\n        }, async () => {\n            const url = await storageRef.getDownloadURL();\n            const createdAt = timestamp();\n            await collectionRef.add({ url, createdAt });\n            setUrl(url);\n        })\n    }, [file])\n\n    return { progress, url, error }\n}\n\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}